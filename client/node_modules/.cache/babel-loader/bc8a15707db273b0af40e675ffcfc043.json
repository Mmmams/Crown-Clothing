{"ast":null,"code":"import { takeLatest, put, call, all, take } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInFailure, SignInSuccess, signOutSuccess, signOutFailure } from \"./user.actions\";\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","take","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInFailure","SignInSuccess","signOutSuccess","signOutFailure","signOut","error","onSignOutStart","SIGN_OUT_START","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","onCheckUserSession","CHECK_USER_SESSION","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","signUp","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all, take } from \"redux-saga/effects\";\r\nimport userActionTypes from \"./user.types\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  SignInFailure,\r\n  SignInSuccess,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n} from \"./user.actions\";\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure());\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(SignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}