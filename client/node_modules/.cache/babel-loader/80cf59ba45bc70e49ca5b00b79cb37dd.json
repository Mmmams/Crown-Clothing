{"ast":null,"code":"import React,{useEffect}from\"react\";import{Route,Switch,Redirect}from\"react-router-dom\";import{createStructuredSelector}from\"reselect\";import{selectCurrentUser}from\"./redux/user/user.selectors\";import HomePage from\"./pages/homepage/homepage.component.jsx\";import ShopPage from\"./pages/shop/shop.component.jsx\";import Header from\"./components/header/header.component.jsx\";import CheckoutPage from\"./pages/checkout/checkout.component\";import SignInAndSignUp from\"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx\";import{connect}from\"react-redux\";// import { selectCollectionsForPreview } from \"./redux/shop/shop.selectors\"; нужно было для добовления инфы о товорах в firebase\n// import {addCollectionAndDocuments} from ... нужно было для добовления инфы о товорах в firebase\nimport\"./App.css\";import{checkUserSession as _checkUserSession}from\"./redux/user/user.actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var checkUserSession=_ref.checkUserSession,currentUser=_ref.currentUser;useEffect(function(){checkUserSession();},[checkUserSession]);//---------------------------------------------------------------------------------------------------------------------------------------\n// addCollectionAndDocuments(\n//   \"collection\",\n//   collectionArray.map(({ title, items }) => ({ title, items }))\n// ); // вызываем функция из нашего firebase файла передаем массив который мапим и возвращаем только нужные занчения( деструктуризируя)\n// });\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:HomePage}),/*#__PURE__*/_jsx(Route,{path:\"/shop\",component:ShopPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signin\",render:function render(){return currentUser?/*#__PURE__*/_jsx(Redirect,{to:\"/\"}):/*#__PURE__*/_jsx(SignInAndSignUp,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/checkout\",component:CheckoutPage}),/*#__PURE__*/_jsx(HomePage,{})]})]});};var mapStateToProps=createStructuredSelector({currentUser:selectCurrentUser});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{checkUserSession:function checkUserSession(){return dispatch(_checkUserSession());}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","createStructuredSelector","selectCurrentUser","HomePage","ShopPage","Header","CheckoutPage","SignInAndSignUp","connect","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,iBAAT,KAAkC,6BAAlC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,yCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0CAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+DAA5B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AACA;AACA,MAAO,WAAP,CACA,OAASC,gBAAgB,GAAhBA,CAAAA,iBAAT,KAAiC,2BAAjC,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAuC,IAApCD,CAAAA,gBAAoC,MAApCA,gBAAoC,CAAlBE,WAAkB,MAAlBA,WAAkB,CACjDd,SAAS,CAAC,UAAM,CACdY,gBAAgB,GACjB,CAFQ,CAEN,CAACA,gBAAD,CAFM,CAAT,CAIA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEN,QAAjC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAEC,QAA/B,EAFF,cAGE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,SAFP,CAGE,MAAM,CAAE,wBACNO,CAAAA,WAAW,cAAG,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAH,cAAyB,KAAC,eAAD,IAD9B,EAHV,EAHF,cAUE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEL,YAAzC,EAVF,cAWE,KAAC,QAAD,IAXF,GAFF,GADF,CAkBD,CA9BD,CAgCA,GAAMM,CAAAA,eAAe,CAAGX,wBAAwB,CAAC,CAC/CU,WAAW,CAAET,iBADkC,CAAD,CAAhD,CAIA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCL,gBAAgB,CAAE,kCAAMK,CAAAA,QAAQ,CAACL,iBAAgB,EAAjB,CAAd,EADsB,CAAf,EAA3B,CAIA,cAAeD,CAAAA,OAAO,CAACI,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\r\n\r\nimport HomePage from \"./pages/homepage/homepage.component.jsx\";\r\nimport ShopPage from \"./pages/shop/shop.component.jsx\";\r\nimport Header from \"./components/header/header.component.jsx\";\r\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\r\nimport SignInAndSignUp from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx\";\r\nimport { connect } from \"react-redux\";\r\n// import { selectCollectionsForPreview } from \"./redux/shop/shop.selectors\"; нужно было для добовления инфы о товорах в firebase\r\n// import {addCollectionAndDocuments} from ... нужно было для добовления инфы о товорах в firebase\r\nimport \"./App.css\";\r\nimport { checkUserSession } from \"./redux/user/user.actions\";\r\n\r\nconst App = ({ checkUserSession, currentUser }) => {\r\n  useEffect(() => {\r\n    checkUserSession();\r\n  }, [checkUserSession]);\r\n\r\n  //---------------------------------------------------------------------------------------------------------------------------------------\r\n  // addCollectionAndDocuments(\r\n  //   \"collection\",\r\n  //   collectionArray.map(({ title, items }) => ({ title, items }))\r\n  // ); // вызываем функция из нашего firebase файла передаем массив который мапим и возвращаем только нужные занчения( деструктуризируя)\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/shop\" component={ShopPage} />\r\n        <Route\r\n          exact\r\n          path=\"/signin\"\r\n          render={() =>\r\n            currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUp />\r\n          }\r\n        />\r\n        <Route exact path=\"/checkout\" component={CheckoutPage} />\r\n        <HomePage />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkUserSession: () => dispatch(checkUserSession()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}