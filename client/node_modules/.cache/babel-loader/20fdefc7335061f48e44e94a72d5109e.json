{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";var config={apiKey:\"AIzaSyAlc1ffp9YQcoTx8n0y6L23Y5EK6b1Zl_E\",authDomain:\"crwn-clothing-ab60b.firebaseapp.com\",projectId:\"crwn-clothing-ab60b\",storageBucket:\"crwn-clothing-ab60b.appspot.com\",messagingSenderId:\"39735950804\",appId:\"1:39735950804:web:be190b1354e305c7fbea41\",measurementId:\"G-1B01PBG33Y\"};//for better understanding firstly write docs\nexport var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,userSnapshot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:userSnapshot=_context.sent;if(userSnapshot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"error user creating\",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// функция для автоматического внесения информации о товарах в firebase(используется один раз, так как нам не надо добовлять ееё при кажом рендере)\nconsole.log(objToAdd);collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objToAdd.forEach(function(elem){var newDocRef=collectionRef.doc();batch.set(newDocRef,elem);});_context2.next=6;return batch.commit();case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(acc,collection){acc[collection.title.toLowerCase()]=collection;return acc;},{});};firebase.initializeApp(config);export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","userSnapshot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objToAdd","collectionRef","collection","batch","forEach","elem","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAlc1ffp9YQcoTx8n0y6L23Y5EK6b1Zl_E\",\r\n  authDomain: \"crwn-clothing-ab60b.firebaseapp.com\",\r\n  projectId: \"crwn-clothing-ab60b\",\r\n  storageBucket: \"crwn-clothing-ab60b.appspot.com\",\r\n  messagingSenderId: \"39735950804\",\r\n  appId: \"1:39735950804:web:be190b1354e305c7fbea41\",\r\n  measurementId: \"G-1B01PBG33Y\",\r\n};\r\n//for better understanding firstly write docs\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const userSnapshot = await userRef.get();\r\n  if (!userSnapshot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error user creating\", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objToAdd) => {\r\n  // функция для автоматического внесения информации о товарах в firebase(используется один раз, так как нам не надо добовлять ееё при кажом рендере)\r\n  console.log(objToAdd);\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  const batch = firestore.batch();\r\n\r\n  objToAdd.forEach((elem) => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, elem);\r\n  });\r\n\r\n  return await batch.commit(); // return promise, when  .commit will succeeds it is return a null value\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n  const transformedCollection = collections.docs.map((doc) => {\r\n    const { title, items } = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items,\r\n    };\r\n  });\r\n  return transformedCollection.reduce((acc, collection) => {\r\n    acc[collection.title.toLowerCase()] = collection;\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const getCurrentUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n    }, reject);\r\n  });\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}