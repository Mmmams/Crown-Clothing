{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fecthCollectionFailure, fetchCollectionSuccess } from \"./shop.actions\";\nimport shopActionsTypes from \"./shop.types\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collection\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // first arg in call is fucntion other args are arguments for this fucntion\n  } catch (error) {} // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fecthCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(shopActionsTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fecthCollectionFailure","fetchCollectionSuccess","shopActionsTypes","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAEA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,YAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAC/BE,+BAD+B,EAE/BO,QAF+B,CAAjC,CALE,CAQC;AACJ,GATD,CASE,OAAOG,KAAP,EAAc,CAAE,CAVoB,CAWtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMd,SAAS,CACbM,gBAAgB,CAACS,sBADJ,EAEbR,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport { fecthCollectionFailure, fetchCollectionSuccess } from \"./shop.actions\";\r\n\r\nimport shopActionsTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection(\"collection\");\r\n\r\n    const snapshot = yield collectionRef.get();\r\n\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    ); // first arg in call is fucntion other args are arguments for this fucntion\r\n  } catch (error) {}\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionSuccess(collectionsMap));\r\n  //   })\r\n  //   .catch((error) => dispatch(fecthCollectionFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(\r\n    shopActionsTypes.FETCH_COLLECTION_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}