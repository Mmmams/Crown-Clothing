{"ast":null,"code":"import { takeLatest, put, call, all, take } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpSuccess), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/Siarhei.Mamykin/Desktop/Crown-Clothing-/client/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","take","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","signOut","error","onSignOutStart","SIGN_OUT_START","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","onCheckUserSession","CHECK_USER_SESSION","additionalData","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all, take } from \"redux-saga/effects\";\r\nimport userActionTypes from \"./user.types\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  signInFailure,\r\n  signInSuccess,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  signUpFailure,\r\n  signUpSuccess,\r\n} from \"./user.actions\";\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure());\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\r\n  yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpSuccess),\r\n    call(onSignUpStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}